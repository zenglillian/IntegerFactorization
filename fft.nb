fft[f_, \[Omega]_] := 
 Module[{n = Length[f], r0, r1}, {If[n == 1, Return[f, Module]];
   r0 = Table[f[[j]] + f[[j + n/2]], {j, 1, n/2}];
   r1 = Table[(f[[j]] - f[[j + n/2]]) \[Omega]^(j - 1), {j, 1, n/2}];
   Return[Riffle[fft[r0, \[Omega]^2], fft[r1, \[Omega]^2]], Module];}]
f1 = {5, 4, 3, -8, 1, 0, 0, 0};
f2 = {93, -7, 8, 12, 1, 0, 0, 0};
g1 = {5, 4, 3, -8, 0, 0, 0, 0};
g2 = {93, -7, 8, 12, 0, 0, 0, 0};
p1 = 5 + 4 x + 3 x^2 - 8 x^3 + x^4;
p2 = 93 - 7 x + 8 x^2 + 12 x^3 + x^4;
\[Omega]1 = Exp[2 Pi I/Length[f1]];
\[Omega]2 = Exp[2 Pi I/Length[f2]];
Print["compute:"];
mul1 = fft[f1, \[Omega]1]*fft[f2, \[Omega]1]; // N
Re[InverseFourier[mul1, FourierParameters -> {1, 1}]]

Print["Check: by build-in fourier"];
mul2 = Fourier[f1, FourierParameters -> {1, 1}]*
    Fourier[f2, FourierParameters -> {1, 1}]; // N
result2 = Re[InverseFourier[mul2, FourierParameters -> {1, 1}]]
Print["after substract 1 for the 1st element, and append 1"];
result2[[1]] = result2[[1]] - 1;
Append[result2, 1]
Print["Check: by naive polynomial multiplication"];
Expand[p1*p2];
b = CoefficientList[Expand[p1*p2], x]

compute:

{466., 337., 291., -673., 226., -31., -85., 4.}

Check: by build-in fourier

{466., 337., 291., -673., 226., -31., -85., 4.}

after substract 1 for the 1st element, and append 1

{465., 337., 291., -673., 226., -31., -85., 4., 1}

Check: by naive polynomial multiplication

{465, 337, 291, -673, 226, -31, -85, 4, 1}





















